// Code generated by protoc-gen-go. DO NOT EDIT.
// source: notificator/pkg/grpc/pb/notificator.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SendSmsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendSmsRequest) Reset()         { *m = SendSmsRequest{} }
func (m *SendSmsRequest) String() string { return proto.CompactTextString(m) }
func (*SendSmsRequest) ProtoMessage()    {}
func (*SendSmsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddff098a01c4ffee, []int{0}
}

func (m *SendSmsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendSmsRequest.Unmarshal(m, b)
}
func (m *SendSmsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendSmsRequest.Marshal(b, m, deterministic)
}
func (m *SendSmsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendSmsRequest.Merge(m, src)
}
func (m *SendSmsRequest) XXX_Size() int {
	return xxx_messageInfo_SendSmsRequest.Size(m)
}
func (m *SendSmsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendSmsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendSmsRequest proto.InternalMessageInfo

type SendSmsReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendSmsReply) Reset()         { *m = SendSmsReply{} }
func (m *SendSmsReply) String() string { return proto.CompactTextString(m) }
func (*SendSmsReply) ProtoMessage()    {}
func (*SendSmsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddff098a01c4ffee, []int{1}
}

func (m *SendSmsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendSmsReply.Unmarshal(m, b)
}
func (m *SendSmsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendSmsReply.Marshal(b, m, deterministic)
}
func (m *SendSmsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendSmsReply.Merge(m, src)
}
func (m *SendSmsReply) XXX_Size() int {
	return xxx_messageInfo_SendSmsReply.Size(m)
}
func (m *SendSmsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendSmsReply.DiscardUnknown(m)
}

var xxx_messageInfo_SendSmsReply proto.InternalMessageInfo

type CheckSmsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckSmsRequest) Reset()         { *m = CheckSmsRequest{} }
func (m *CheckSmsRequest) String() string { return proto.CompactTextString(m) }
func (*CheckSmsRequest) ProtoMessage()    {}
func (*CheckSmsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddff098a01c4ffee, []int{2}
}

func (m *CheckSmsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckSmsRequest.Unmarshal(m, b)
}
func (m *CheckSmsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckSmsRequest.Marshal(b, m, deterministic)
}
func (m *CheckSmsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckSmsRequest.Merge(m, src)
}
func (m *CheckSmsRequest) XXX_Size() int {
	return xxx_messageInfo_CheckSmsRequest.Size(m)
}
func (m *CheckSmsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckSmsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckSmsRequest proto.InternalMessageInfo

type CheckSmsReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckSmsReply) Reset()         { *m = CheckSmsReply{} }
func (m *CheckSmsReply) String() string { return proto.CompactTextString(m) }
func (*CheckSmsReply) ProtoMessage()    {}
func (*CheckSmsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddff098a01c4ffee, []int{3}
}

func (m *CheckSmsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckSmsReply.Unmarshal(m, b)
}
func (m *CheckSmsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckSmsReply.Marshal(b, m, deterministic)
}
func (m *CheckSmsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckSmsReply.Merge(m, src)
}
func (m *CheckSmsReply) XXX_Size() int {
	return xxx_messageInfo_CheckSmsReply.Size(m)
}
func (m *CheckSmsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckSmsReply.DiscardUnknown(m)
}

var xxx_messageInfo_CheckSmsReply proto.InternalMessageInfo

type SendEmailRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendEmailRequest) Reset()         { *m = SendEmailRequest{} }
func (m *SendEmailRequest) String() string { return proto.CompactTextString(m) }
func (*SendEmailRequest) ProtoMessage()    {}
func (*SendEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddff098a01c4ffee, []int{4}
}

func (m *SendEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendEmailRequest.Unmarshal(m, b)
}
func (m *SendEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendEmailRequest.Marshal(b, m, deterministic)
}
func (m *SendEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendEmailRequest.Merge(m, src)
}
func (m *SendEmailRequest) XXX_Size() int {
	return xxx_messageInfo_SendEmailRequest.Size(m)
}
func (m *SendEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendEmailRequest proto.InternalMessageInfo

type SendEmailReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendEmailReply) Reset()         { *m = SendEmailReply{} }
func (m *SendEmailReply) String() string { return proto.CompactTextString(m) }
func (*SendEmailReply) ProtoMessage()    {}
func (*SendEmailReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddff098a01c4ffee, []int{5}
}

func (m *SendEmailReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendEmailReply.Unmarshal(m, b)
}
func (m *SendEmailReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendEmailReply.Marshal(b, m, deterministic)
}
func (m *SendEmailReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendEmailReply.Merge(m, src)
}
func (m *SendEmailReply) XXX_Size() int {
	return xxx_messageInfo_SendEmailReply.Size(m)
}
func (m *SendEmailReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendEmailReply.DiscardUnknown(m)
}

var xxx_messageInfo_SendEmailReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*SendSmsRequest)(nil), "pb.SendSmsRequest")
	proto.RegisterType((*SendSmsReply)(nil), "pb.SendSmsReply")
	proto.RegisterType((*CheckSmsRequest)(nil), "pb.CheckSmsRequest")
	proto.RegisterType((*CheckSmsReply)(nil), "pb.CheckSmsReply")
	proto.RegisterType((*SendEmailRequest)(nil), "pb.SendEmailRequest")
	proto.RegisterType((*SendEmailReply)(nil), "pb.SendEmailReply")
}

func init() {
	proto.RegisterFile("notificator/pkg/grpc/pb/notificator.proto", fileDescriptor_ddff098a01c4ffee)
}

var fileDescriptor_ddff098a01c4ffee = []byte{
	// 198 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0xcc, 0xcb, 0x2f, 0xc9,
	0x4c, 0xcb, 0x4c, 0x4e, 0x2c, 0xc9, 0x2f, 0xd2, 0x2f, 0xc8, 0x4e, 0xd7, 0x4f, 0x2f, 0x2a, 0x48,
	0xd6, 0x2f, 0x48, 0xd2, 0x47, 0x12, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48,
	0x52, 0x12, 0xe0, 0xe2, 0x0b, 0x4e, 0xcd, 0x4b, 0x09, 0xce, 0x2d, 0x0e, 0x4a, 0x2d, 0x2c, 0x4d,
	0x2d, 0x2e, 0x51, 0xe2, 0xe3, 0xe2, 0x81, 0x8b, 0x14, 0xe4, 0x54, 0x2a, 0x09, 0x72, 0xf1, 0x3b,
	0x67, 0xa4, 0x26, 0x67, 0x23, 0x29, 0xe1, 0xe7, 0xe2, 0x45, 0x08, 0x81, 0xd4, 0x08, 0x71, 0x09,
	0x80, 0xf4, 0xb8, 0xe6, 0x26, 0x66, 0xe6, 0xc0, 0x14, 0x41, 0x4d, 0x86, 0x8a, 0x15, 0xe4, 0x54,
	0x1a, 0xad, 0x64, 0xe4, 0xe2, 0xf6, 0x43, 0xb8, 0x42, 0x48, 0x9f, 0x8b, 0x1d, 0x6a, 0x93, 0x90,
	0x90, 0x5e, 0x41, 0x92, 0x1e, 0xaa, 0x43, 0xa4, 0x04, 0x50, 0xc4, 0x0a, 0x72, 0x2a, 0x85, 0x8c,
	0xb8, 0x38, 0x60, 0xf6, 0x0a, 0x09, 0x83, 0x64, 0xd1, 0x1c, 0x26, 0x25, 0x88, 0x2a, 0x08, 0xd2,
	0x63, 0xca, 0xc5, 0x09, 0x77, 0x86, 0x90, 0x08, 0xcc, 0x48, 0x64, 0x97, 0x4a, 0x09, 0xa1, 0x89,
	0x16, 0xe4, 0x54, 0x26, 0xb1, 0x81, 0x83, 0xc8, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x9a, 0xf7,
	0x55, 0xed, 0x4f, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NotificatorClient is the client API for Notificator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NotificatorClient interface {
	SendSms(ctx context.Context, in *SendSmsRequest, opts ...grpc.CallOption) (*SendSmsReply, error)
	CheckSms(ctx context.Context, in *CheckSmsRequest, opts ...grpc.CallOption) (*CheckSmsReply, error)
	SendEmail(ctx context.Context, in *SendEmailRequest, opts ...grpc.CallOption) (*SendEmailReply, error)
}

type notificatorClient struct {
	cc *grpc.ClientConn
}

func NewNotificatorClient(cc *grpc.ClientConn) NotificatorClient {
	return &notificatorClient{cc}
}

func (c *notificatorClient) SendSms(ctx context.Context, in *SendSmsRequest, opts ...grpc.CallOption) (*SendSmsReply, error) {
	out := new(SendSmsReply)
	err := c.cc.Invoke(ctx, "/pb.Notificator/SendSms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificatorClient) CheckSms(ctx context.Context, in *CheckSmsRequest, opts ...grpc.CallOption) (*CheckSmsReply, error) {
	out := new(CheckSmsReply)
	err := c.cc.Invoke(ctx, "/pb.Notificator/CheckSms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificatorClient) SendEmail(ctx context.Context, in *SendEmailRequest, opts ...grpc.CallOption) (*SendEmailReply, error) {
	out := new(SendEmailReply)
	err := c.cc.Invoke(ctx, "/pb.Notificator/SendEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NotificatorServer is the server API for Notificator service.
type NotificatorServer interface {
	SendSms(context.Context, *SendSmsRequest) (*SendSmsReply, error)
	CheckSms(context.Context, *CheckSmsRequest) (*CheckSmsReply, error)
	SendEmail(context.Context, *SendEmailRequest) (*SendEmailReply, error)
}

// UnimplementedNotificatorServer can be embedded to have forward compatible implementations.
type UnimplementedNotificatorServer struct {
}

func (*UnimplementedNotificatorServer) SendSms(ctx context.Context, req *SendSmsRequest) (*SendSmsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendSms not implemented")
}
func (*UnimplementedNotificatorServer) CheckSms(ctx context.Context, req *CheckSmsRequest) (*CheckSmsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckSms not implemented")
}
func (*UnimplementedNotificatorServer) SendEmail(ctx context.Context, req *SendEmailRequest) (*SendEmailReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendEmail not implemented")
}

func RegisterNotificatorServer(s *grpc.Server, srv NotificatorServer) {
	s.RegisterService(&_Notificator_serviceDesc, srv)
}

func _Notificator_SendSms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendSmsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificatorServer).SendSms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Notificator/SendSms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificatorServer).SendSms(ctx, req.(*SendSmsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Notificator_CheckSms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckSmsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificatorServer).CheckSms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Notificator/CheckSms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificatorServer).CheckSms(ctx, req.(*CheckSmsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Notificator_SendEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificatorServer).SendEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Notificator/SendEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificatorServer).SendEmail(ctx, req.(*SendEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Notificator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Notificator",
	HandlerType: (*NotificatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendSms",
			Handler:    _Notificator_SendSms_Handler,
		},
		{
			MethodName: "CheckSms",
			Handler:    _Notificator_CheckSms_Handler,
		},
		{
			MethodName: "SendEmail",
			Handler:    _Notificator_SendEmail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "notificator/pkg/grpc/pb/notificator.proto",
}
